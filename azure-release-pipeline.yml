trigger:
  branches:
    include:
      - refs/tags/release

pool: "Cashflows RHEL8 Pool"

parameters:
- name: createRelease
  displayName: Create GitHub Release
  type: boolean
  default: false

variables:
  ${{ if eq(variables['Build.Reason'], 'Manual') }}:
    createRelease: ${{ parameters.createRelease }}
  ${{ else }}:
    createRelease: true
  nodeVersion: '14.x'
  releaseVersionMajorMinor: '1.0'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    steps:
    - task: NodeTool@0 
      displayName: 'Install Node ${{ variables.nodeVersion }}'
      inputs:
        versionSpec: '${{ variables.nodeVersion }}'
    - task: Npm@1
      displayName: 'Npm Install'
      inputs:
        command: 'install'
    - task: Npm@1
      displayName: 'Npm Version'
      inputs:
        command: 'custom'
        customCommand: 'version'
    - task: Npm@1
      displayName: 'Npm Build'
      inputs:
        command: 'custom'
        customCommand: 'run build'
    - task: Npm@1
      displayName: 'Npm Test'
      inputs:
        command: 'custom'
        customCommand: 'run test'
    - ${{ if eq(variables['createRelease'], 'True') }}:
      - task: CopyFiles@2
        displayName: 'Copy Dist Folder'
        inputs:
          contents: 'dist/**'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - publish: '$(Build.ArtifactStagingDirectory)/dist'
        displayName: 'Publish Dist Folder'
        artifact: dist
    - ${{ else }}:
      - pwsh: Write-Host "##vso[build.addbuildtag]non-release-build"
        displayName: Tag Pipeline

- ${{ if eq(variables['createRelease'], 'True') }}:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops
  - stage: Release
    dependsOn: Build
    jobs:
    - job: ReleaseGitHub
      variables:
        revision: $[ counter(variables['releaseVersionMajorMinor' ], 1)]
        version: ${{ variables['releaseVersionMajorMinor'] }}.$(revision)
      steps:
      - download: current
        artifact: dist
      - task: PowerShell@2
        displayName: 'Check Version'
        inputs:
          targetType: 'inline'
          script: |
            echo "Version from pipeline: $(version)"
            $packageJson = Get-Content -Path $(Build.SourcesDirectory)/package.json | ConvertFrom-Json
            Write-Host Version from package.json: $packageJson.version

            if($(version) -ne $packageJson.version)
            {
              Write-Host "Remember that the next pipeline run will increment the version number again. Set the package.json version to ${{ variables['releaseVersionMajorMinor' ] }}.${{ $(revision) + 1 }}"
              Write-Error "Pipeline version does not match package.json version."
              Write-Host "Remember that the next pipeline run will increment the version number again. Set the package.json version to ${{ variables['releaseVersionMajorMinor' ] }}.${{ $(revision) + 1 }}"
              exit 1
            }


      # - download: current
      #   artifact: dist
      # - task: GitHubRelease@0
      #   displayName: 'Create GitHub Release'
      #   inputs:
      #     gitHubConnection: cashflows-public-Core
      #     repositoryName: 'cashflows/cashflows-clientlib-js'
      #     action: 'create'
      #     title: Release $(version)
      #     tagSource: manual
      #     tag: release-v$(version)
      #     assets: |
      #       $(Pipeline.Workspace)/dist/**
      # - task: Npm@1
      #   inputs:
      #     command: publish
      #     publishRegistry: useExternalRegistry
      #     publishEndpoint: 'npmjs-public-Core'
      # - pwsh: Write-Host "##vso[build.addbuildtag]release-build"
      #   displayName: Tag Pipeline
      # - pwsh: Write-Host "##vso[build.addbuildtag]v$(version)"
      #   displayName: Tag Pipeline
